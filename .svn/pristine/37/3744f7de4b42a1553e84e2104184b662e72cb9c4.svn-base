<template>
    <div class="shop-cart" id="shop-cart" v-if="this.$store.state.categoryList.length>0 && !isLock">
        <div class="shopcart-header">
            <span class="header-left">购物车</span>
            <span class="info-close iconfont icon-zhankai" @click="toggleShopCart"></span>
            <button class="btn header-right" @click="emptyShopCart" :disabled="!this.$store.state.shopCart.totalNumber">清空菜品</button>
        </div>
        <div class="shopcart-info">
            <p class="text">取餐时间:</p>
            <p class="text">{{takeFoodTime}}</p>
            <p class="text">最晚预定时间:{{orderFoodTime}}</p>
        </div>
        <ul class="shopcart-list">
            <li class="shopcart-item" v-for="food in shopcartList" :key="food.id">
                <div class="food-name" :title="food.goodsName">{{food.goodsName}}</div>
                <div class="modify-num">
                    <span href="javascript:;" class="add-one iconfont icon-zengjia" @click="addFood(food)" ></span>
                    <input type="text" :value="food.goodsNum" class="food-num" disabled>
                    <span href="javascript:;" class="del-one iconfont icon-jianqu" @click="delFood(food)"></span>
                </div>
                <!-- <span class="food-price">{{food.price}}</span> -->
                <span class="food-unit"> {{food.buyUnit}}</span>
            </li>
        </ul>
        <div class="shopcart-bottom">
            <p class="food-total">
                共计 <span class="food-total-count" id="food-total-count">{{totalNumber}}</span> 份
                <!-- 总计 <span class="food-total-price" id="food-total-price">{{totalPrice}}</span> 元 -->
            </p>
            <button class="btn btn-success btn-buy" @click="placeOrder" :disabled="!this.$store.state.shopCart.totalNumber">立即下单</button>
        </div>
    </div>
</template>

<script>
export default {
  data() {
    return {
        _height:0
    }
  },
  created () {
  },
  computed: {
      shopcartList(){
          return this.$store.state.shopCart.foodList;
      },
      totalNumber(){
          return this.$store.state.shopCart.totalNumber;
      },
      totalPrice(){
          return this.$store.state.shopCart.totalPrice;
      },
      isLock(){
		  var _isLock = this.$store.state.personInfo.isLock;
		  var _this = this;
		  if(_isLock){
			_this.$layer.alert('<div style="height:42px;line-height:42px">你被锁定了</div>',{
                icon:1,
            },function (index) {
                _this.$layer.close(index)
            })
		  }
          return _isLock;
      },
      takeFoodTime(){
          return this.$store.state.pageInfo.currentSelect.takeFoodTime;
      },
      orderFoodTime(){
           return this.$store.state.pageInfo.currentSelect.deadlineTime;
      }
  },
  methods: {
      addFood(food){
          var params = {
              food:food,
              isAdd:true
          }
          this.$store.dispatch('editShopCart',{ params:params })
      },
      delFood(food){
          var params = {
              food:food,
              isAdd:false
          }
          this.$store.dispatch('editShopCart',{ params:params })
      },
      emptyShopCart(){
          this.$store.dispatch('emptyShopCart')
      },
      placeOrder(){
         var _this = this;
         var successFn =  function (res) {
             if (res.flag == 1) {  // 下单成功
             errorFn({'text':'已超过最晚下单时间,请在指定下单时间重新下单'})
                // _this.$layer.alert('<div style="height:42px;line-height:42px">下单成功</div>',{
                //     icon:2,
                //     shadeClose: false,//点击遮罩是否关闭
                //     shade: false,//是否显示遮罩
                // },function (index) {
                //     _this.$store.dispatch('emptyShopCart');
                //     _this.$layer.close(index)
                // })
             }else if(ref.flag==2){  // 超过最晚下单时间
                errorFn({'text':'已超过最晚下单时间,请在指定下单时间重新下单'})
             }else if(ref.flag==0){  // 下单失败
                errorFn()
             }
         }
         var errorFn = function (errJson) {
             var errText = errJson && errJson.text ? errJson.text : '下单失败';
             _this.$layer.alert('<div style="height:42px;line-height:42px">'+ errText +'</div>',{
                icon:1,
                shadeClose: false,//点击遮罩是否关闭
                shade: false,//是否显示遮罩
            },function (index) {
                _this.$layer.close(index)
            })
         }
         var params = {
             success:successFn,
             error:errorFn
         }
         this.$store.dispatch('placeOrder',params)
        //   this.$layer.alert('下单失败',{
        //       icon:1,
        //   })
        // this.$layer.open({
        //     icon:2,
        //     content:'下单成功',
        //     shadeClose: true,//点击遮罩是否关闭
        //     shade: false,//是否显示遮罩
        // })
      },
      toggleShopCart(){
          var _this = this;
          if ($('.shop-cart').css('bottom') != '0px') {  // 展开
                $('.shop-cart').animate({
                    'bottom':0,
                    // 'right':0
                },function () {
                    $('.shopcart-list').css({
                        'height':'auto'
                    })
                })
          }else{  // 收起
                _this._height = $('.shopcart-list').height()
                $('.shopcart-list').animate({
                    'height':0
                },function () {
                    $('.shop-cart').animate({
                        'bottom':'-18.6%',
                        // 'right':'-7%'
                    })
                })
          }
      }
  }
}
</script>

<style scoped>
* {
    margin: 0;
    padding:0;
    border: 0;
}
.shop-cart {
    z-index: 99;
    width: 280px;
    background-color: #FFFFFF;
    position: fixed;
    bottom: 0;
    right: 0px;
    border: 1px solid #cccccc;
    border-top-left-radius: 15px;
    box-shadow: 0 3px 10px 0 rgba(0,0,0,0.06);
    transition:all 0.2s linear; 
}
.shop-cart .shopcart-header {
   position: relative;
   padding-left: 15px;
   height: 70px;
   line-height: 70px;
   font-size: 16px;
   letter-spacing: 2px;
   color: #FFFFFF;
   border-top-left-radius: 15px;
   background: rgb(196,138,79);
}
.shop-cart .shopcart-info {
    padding:2px 20px;
    text-align: center;
    color: #FFFFFF;
    font-weight: 700;
    border-top: 1px solid #dddddd;
    background: rgb(196,138,79);
}
.shopcart-header .header-left {
   font-weight: 600;
}
.shopcart-header .header-right {
   position: absolute;
   right: 35px;
   top: 0;
   bottom: 0;
   color: #FFFFFF;
   background: none;
   outline: none;
}
.shopcart-header .info-close {
    /* float: left; */
    padding:0 5px;
    cursor: pointer;
}

.shop-cart .shopcart-list {
    overflow: auto;
    max-height: 480px;
    background:rgb(252, 224, 196)
}
.shop-cart .shopcart-list .shopcart-item {
    padding:15px 10px; 
    border-bottom: 1px solid rgb(196,138,79);
    box-sizing: border-box;
}
.shopcart-item .food-name {
    display: inline-block;
    width: 130px;
    overflow-wrap: break-word
}
.shopcart-item .modify-num {
    display: inline-block;
    /* width: 100px; */
    height: 10px;  
    margin-left: 10px; 
}
.modify-num .del-one,.modify-num .add-one{
    color: rgb(196,138,79);
    cursor: pointer;
}
.food-num {
    width: 25px;
    display: inline-block;
    height: 16px;
    _height: 17px;
    padding: 0 3px;
    line-height: 16px;
    border-left: 0;
    border-right: 0;
    border-color: #E5E5E5;
    text-align: center;
    background: none;
}
.food-num:focus {
    outline: none;
}
.shopcart-item .food-price,.shopcart-item .food-unit {
    display: inline-block;
    width: 10%;
}
.shopcart-item .food-price::before{
    content: '￥'
}
.shopcart-bottom {
    padding:15px;
    background: rgb(252, 224, 196)
}
.shopcart-bottom .btn-buy {
    display: block;
    width:230px;
    padding:3px 0;
    margin:5px auto;
    border: 1px solid rgb(196,138,79);
    background: rgb(223, 176, 129);
}
.shopcart-bottom .food-total {
  /* display: inline-block */
}
.shopcart-bottom .food-total-count {
    font-size: 16px;
    font-weight: 700;
    color: #337ab7;
}
.shopcart-bottom .food-total-price {
    font-size: 22px;
    font-weight: 700;
    color: red;
}
</style>
